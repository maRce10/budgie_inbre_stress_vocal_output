#
cowplot::ggsave2(filename = "./output/bar_graphs_and_estimates_behavior_300dpi.jpeg", dpi = 300, width = 25, height = 9)
responses <- c("call.count", "acoustic.area", "acustic.plasticity", "acoustic.overlap.to.group")
predictors <- c("~ treatment + week + (1|ID) + (1|round)")
formulas <- expand.grid(responses = responses, predictors = predictors, stringsAsFactors = FALSE)
vars_to_scale <- c(responses, "week")
for (i in vars_to_scale) agg_dat[, vars_to_scale] <- scale(agg_dat[, vars_to_scale])
behav_models <- lapply(1:nrow(formulas), function(x) {
sub_dat <- agg_dat[!is.na(agg_dat[names(agg_dat) == formulas$responses[x]]),]
# remove week 1
if (!grepl("count|group", formulas$responses[x]))
sub_dat <- sub_dat[sub_dat$week != 1, ]
mod <- brm(formula = paste(formulas$responses[x], formulas$predictors[x]),
iter = 50000, silent = 2, data = sub_dat, control = list(adapt_delta = 0.9, max_treedepth = 15),
chains = 4, prior = c(prior(normal(0, 5), "b"), prior(normal(0, 10), "Intercept"),
prior(student_t(3, 0, 10), "sd"), prior(student_t(3, 0, 10), "sigma"))
)
return(mod)
})
names(behav_models) <- paste(formulas$responses, formulas$predictors)
saveRDS(behav_models, "./data/processed/behavioral_response_models.RDS")
responses <- c("baseline.CORT", "stress.response", "stress.CORT", "weight", "breath.rate")
predictors <- c("~ treatment + week + (1|ID) + (1|round)")
formulas <- expand.grid(responses = responses, predictors = predictors, stringsAsFactors = FALSE)
vars_to_scale <- c(responses, "week")
# remove week 1
sub_agg_dat <- agg_dat[agg_dat$week != 1, ]
for (i in vars_to_scale) sub_agg_dat[, vars_to_scale] <- scale(sub_agg_dat[, vars_to_scale])
physio_models <- lapply(1:nrow(formulas), function(x) {
sub_dat <- sub_agg_dat[!is.na(sub_agg_dat[names(sub_agg_dat) == formulas$responses[x]]),
]
sub_dat
mod <- brm(formula = paste(formulas$responses[x], formulas$predictors[x]),
iter = 20000, silent = 2, data = sub_dat, control = list(adapt_delta = 0.9),
chains = 4,
prior = c(prior(normal(0, 5), "b"), prior(normal(0, 10), "Intercept"),
+     prior(student_t(3, 0, 10), "sd"), prior(student_t(3, 0, 10), "sigma"))
return(mod)
responses <- c("baseline.CORT", "stress.response", "stress.CORT", "weight", "breath.rate")
predictors <- c("~ treatment + week + (1|ID) + (1|round)")
formulas <- expand.grid(responses = responses, predictors = predictors, stringsAsFactors = FALSE)
vars_to_scale <- c(responses, "week")
# remove week 1
sub_agg_dat <- agg_dat[agg_dat$week != 1, ]
for (i in vars_to_scale) sub_agg_dat[, vars_to_scale] <- scale(sub_agg_dat[, vars_to_scale])
physio_models <- lapply(1:nrow(formulas), function(x) {
sub_dat <- sub_agg_dat[!is.na(sub_agg_dat[names(sub_agg_dat) == formulas$responses[x]]),
]
sub_dat
mod <- brm(formula = paste(formulas$responses[x], formulas$predictors[x]),
iter = 20000, silent = 2, data = sub_dat, control = list(adapt_delta = 0.9),
chains = 4,
prior = c(prior(normal(0, 5), "b"), prior(normal(0, 10), "Intercept"),
+     prior(student_t(3, 0, 10), "sd"), prior(student_t(3, 0, 10), "sigma"))
return(mod)
responses <- c("baseline.CORT", "stress.response", "stress.CORT", "weight", "breath.rate")
predictors <- c("~ treatment + week + (1|ID) + (1|round)")
formulas <- expand.grid(responses = responses, predictors = predictors, stringsAsFactors = FALSE)
vars_to_scale <- c(responses, "week")
# remove week 1
sub_agg_dat <- agg_dat[agg_dat$week != 1, ]
for (i in vars_to_scale) sub_agg_dat[, vars_to_scale] <- scale(sub_agg_dat[, vars_to_scale])
physio_models <- lapply(1:nrow(formulas), function(x) {
physio_models <- lapply(1:nrow(formulas), function(x) {
sub_dat <- sub_agg_dat[!is.na(sub_agg_dat[names(sub_agg_dat) == formulas$responses[x]]),
]
sub_dat
mod <- brm(formula = paste(formulas$responses[x], formulas$predictors[x]),
iter = 20000, silent = 2, data = sub_dat, control = list(adapt_delta = 0.9),
chains = 4,
prior = c(prior(normal(0, 5), "b"), prior(normal(0, 10), "Intercept"),
+     prior(student_t(3, 0, 10), "sd"), prior(student_t(3, 0, 10), "sigma"))
return(mod)
responses <- c("baseline.CORT", "stress.response", "stress.CORT", "weight", "breath.rate")
predictors <- c("~ treatment + week + (1|ID) + (1|round)")
formulas <- expand.grid(responses = responses, predictors = predictors, stringsAsFactors = FALSE)
vars_to_scale <- c(responses, "week")
# remove week 1
sub_agg_dat <- agg_dat[agg_dat$week != 1, ]
for (i in vars_to_scale) sub_agg_dat[, vars_to_scale] <- scale(sub_agg_dat[, vars_to_scale])
physio_models <- lapply(1:nrow(formulas), function(x) {
sub_dat <- sub_agg_dat[!is.na(sub_agg_dat[names(sub_agg_dat) == formulas$responses[x]]),
]
sub_dat
mod <- brm(formula = paste(formulas$responses[x], formulas$predictors[x]),
iter = 20000, silent = 2, data = sub_dat, control = list(adapt_delta = 0.9),
chains = 4,
prior = c(prior(normal(0, 5), "b"), prior(normal(0, 10), "Intercept"),
prior(student_t(3, 0, 10), "sd"), prior(student_t(3, 0, 10), "sigma"))
return(mod)
responses <- c("baseline.CORT", "stress.response", "stress.CORT", "weight", "breath.rate")
predictors <- c("~ treatment + week + (1|ID) + (1|round)")
formulas <- expand.grid(responses = responses, predictors = predictors, stringsAsFactors = FALSE)
vars_to_scale <- c(responses, "week")
# remove week 1
sub_agg_dat <- agg_dat[agg_dat$week != 1, ]
for (i in vars_to_scale) sub_agg_dat[, vars_to_scale] <- scale(sub_agg_dat[, vars_to_scale])
physio_models <- lapply(1:nrow(formulas), function(x) {
sub_dat <- sub_agg_dat[!is.na(sub_agg_dat[names(sub_agg_dat) == formulas$responses[x]]),
]
sub_dat
mod <- brm(formula = paste(formulas$responses[x], formulas$predictors[x]),
iter = 20000, silent = 2, data = sub_dat, control = list(adapt_delta = 0.9),
chains = 4,
prior = c(prior(normal(0, 5), "b"), prior(normal(0, 10), "Intercept"),
prior(student_t(3, 0, 10), "sd"), prior(student_t(3, 0, 10), "sigma")))
return(mod)
})
names(physio_models) <- paste(formulas$responses, formulas$predictors)
saveRDS(physio_models, "./data/processed/physiological_response_models.RDS")
gg_coeffs_behav <- lapply(behav_models, function(x){
vars <- grep("b_", posterior::variables(x), value = TRUE)
draws <- posterior::as_draws_array(x, variable = vars)
coef_table <- draw_summary(draws, variables = vars, probs = c(0.025, 0.975), robust = TRUE)
coef_table$predictor <- rownames(coef_table)
coef_table$predictor <- gsub("b_treatment|b_", "", coef_table$predictor)
coef_table$predictor <- gsub("Stress", " stress", coef_table$predictor)
coef_table$predictor <- gsub("week", "Week", coef_table$predictor)
coef_table <- coef_table[coef_table$predictor != "Intercept", ]
gg_coef <- ggplot2::ggplot(data = coef_table, aes(x = Estimate, y = predictor)) +
geom_vline(xintercept = 0, lty = 2) +
ggplot2::geom_point(size = 4, col = col_pointrange) +
ggplot2::geom_errorbar(ggplot2::aes(xmin = `l-95% CI`, xmax = `u-95% CI`),
width = 0, col = col_pointrange) +
ggplot2::theme_classic(base_size = bs) +
ggplot2::theme(
axis.ticks.length = ggplot2::unit(0, "pt"),
plot.margin = ggplot2::margin(0, 0, 0, 0, "pt"),
legend.position = "none",
strip.background = ggplot2::element_blank(),
strip.text = ggplot2::element_blank()
) +
ggplot2::labs(x = "Effect size", y = "")
return(gg_coef)
})
#     theme(legend.position = "none"), gg_coeffs_behav[[grep("count", names(gg_coeffs_behav))]], nrow = 2)
#
# cowplot::plot_grid(gg_acoustic.area + theme_classic(base_size = 20) +
#     theme(legend.position = "none"), gg_coeffs_behav[[grep("area", names(gg_coeffs_behav))]])
#
# cowplot::plot_grid(gg_acustic.plasticity + theme_classic(base_size = 20) +
#     theme(legend.position = "none"), gg_coeffs_behav[[grep("overlap ~", names(gg_coeffs_behav))]])
#
# cowplot::plot_grid(gg_acoustic.overlap.group + theme_classic(base_size = 10) +
#     theme(legend.position = "none"), gg_coeffs_behav[[grep("group", names(gg_coeffs_behav))]])
bs <- 10
cowplot::plot_grid(
gg_call.count + theme_classic(base_size = bs) +
theme(legend.position = "none"),
gg_acoustic.area + theme_classic(base_size = bs) +
theme(legend.position = "none"),
gg_acustic.plasticity + theme_classic(base_size = bs) +
theme(legend.position = "none"),
gg_acoustic.overlap.group + theme_classic(base_size = bs) +
theme(legend.position = "none"),
gg_coeffs_behav[[grep("count", names(gg_coeffs_behav))]] + theme_classic(base_size = bs),
gg_coeffs_behav[[grep("area", names(gg_coeffs_behav))]] + theme_classic(base_size = bs),
gg_coeffs_behav[[grep("overlap ~", names(gg_coeffs_behav))]] + theme_classic(base_size = bs),
gg_coeffs_behav[[grep("group", names(gg_coeffs_behav))]] + theme_classic(base_size = bs), nrow = 2, rel_heights = c(1.8, 1))
names(gg_coeffs_behav)
agg_call.count <- aggregate(cbind(call.count, acoustic.convergence) ~ week + treatment, agg_dat, mean)
agg_dat <- aggregate(selec ~ ID + week, data = sels, length)
# compare to week 1 agg_dat$call.count <- sapply(1:nrow(agg_dat), function(x) {
# baseline <- agg_dat$selec[agg_dat$week == 1 & agg_dat$ID == agg_dat$ID[x]] if
# (length(baseline) > 0) change <- agg_dat$selec[x] - baseline else change <-
# agg_dat$selec[x] return(change) } )
# without comparing to week 1
agg_dat$call.count <- sapply(1:nrow(agg_dat), function(x) agg_dat$selec[x])
agg_dat$selec <- NULL
agg_dat$baseline.CORT <- sapply(1:nrow(agg_dat), function(x) {
baseline <- sels$cort.baseline[sels$week == 1 & sels$ID == agg_dat$ID[x]]
current <- sels$cort.baseline[sels$week == agg_dat$week[x] & sels$ID == agg_dat$ID[x]]
if (length(baseline) > 0 & length(current) > 0)
change <- mean(current) - mean(baseline) else change <- NA
return(change)
})
agg_dat$stress.response <- sapply(1:nrow(agg_dat), function(x) {
baseline <- sels$stress.response[sels$week == 1 & sels$ID == agg_dat$ID[x]]
current <- sels$stress.response[sels$week == agg_dat$week[x] & sels$ID == agg_dat$ID[x]]
if (length(baseline) > 0 & length(current) > 0)
change <- mean(current) - mean(baseline) else change <- NA
return(change)
})
agg_dat$stress.CORT <- sapply(1:nrow(agg_dat), function(x) {
baseline <- sels$cort.stress[sels$week == 1 & sels$ID == agg_dat$ID[x]]
current <- sels$cort.stress[sels$week == agg_dat$week[x] & sels$ID == agg_dat$ID[x]]
if (length(baseline) > 0 & length(current) > 0)
change <- mean(current) - mean(baseline) else change <- NA
return(change)
})
agg_dat$weight <- sapply(1:nrow(agg_dat), function(x) {
baseline <- sels$weight[sels$week == 1 & sels$ID == agg_dat$ID[x]]
current <- sels$weight[sels$week == agg_dat$week[x] & sels$ID == agg_dat$ID[x]]
if (length(baseline) > 0 & length(current) > 0)
change <- mean(current) - mean(baseline) else change <- NA
return(change)
})
agg_dat$breath.rate <- sapply(1:nrow(agg_dat), function(x) {
baseline <- sels$breath.count[sels$week == 1 & sels$ID == agg_dat$ID[x]]
current <- sels$breath.count[sels$week == agg_dat$week[x] & sels$ID == agg_dat$ID[x]]
if (length(baseline) > 0 & length(current) > 0)
change <- mean(current) - mean(baseline) else change <- NA
return(change)
})
agg_dat$acoustic.diversity <- sapply(1:nrow(agg_dat), function(x) {
area <- areas_by_week$raref.area[areas_by_week$ID == agg_dat$ID[x] & areas_by_week$week ==
agg_dat$week[x]]
if (length(area) < 1)
area <- NA
return(area)
})
agg_dat$acoustic.distance <- sapply(1:nrow(agg_dat), function(x) {
distance <- indiv_ovlp$distance.to.first.week[indiv_ovlp$ID == agg_dat$ID[x] &
indiv_ovlp$week == agg_dat$week[x]]
if (length(distance) < 1)
distance <- NA
return(distance)
})
agg_dat$acustic.plasticity <- sapply(1:nrow(agg_dat), function(x) {
overlap <- indiv_ovlp$overlap.to.first.week[indiv_ovlp$ID == agg_dat$ID[x] &
indiv_ovlp$week == agg_dat$week[x]]
plasticity <- 1 - overlap
if (length(plasticity) < 1)
plasticity <- NA
return(plasticity)
})
agg_dat$acoustic.convergence <- sapply(1:nrow(agg_dat), function(x) {
overlap <- group_ovlp$overlap.to.group[group_ovlp$ID == agg_dat$ID[x] & group_ovlp$week ==
agg_dat$week[x]]
if (length(overlap) < 1)
overlap <- NA
return(overlap)
})
agg_dat$treatment <- sapply(1:nrow(agg_dat), function(x) unique(sels$treatment[sels$ID ==
agg_dat$ID[x]]))
agg_dat$round <- sapply(1:nrow(agg_dat), function(x) unique(sels$round[sels$ID ==
agg_dat$ID[x]]))
agg_call.count <- aggregate(cbind(call.count, acoustic.convergence) ~ week + treatment, agg_dat, mean)
agg_behav <- aggregate(cbind(acoustic.diversity, acustic.plasticity) ~ week + treatment, agg_dat, mean)
agg_call.count_se <- aggregate(cbind(call.count, acoustic.convergence) ~ week + treatment, agg_dat, standard_error)
agg_behav_se <- aggregate(cbind(acoustic.diversity, acustic.plasticity) ~ week + treatment, agg_dat, standard_error)
agg_behav_se <- merge(agg_call.count_se, agg_behav_se, all = TRUE)
names(agg_behav_se) <- paste(names(agg_behav_se), ".se", sep = "")
agg_behav <- merge(agg_call.count, agg_behav, all = TRUE)
agg_behav <- cbind(agg_behav, agg_behav_se[ , 3:6])
bs <- 22
agg_behav$treatment <- factor(agg_behav$treatment, levels = c("Control", "Medium Stress",
"High Stress"))
gg_call.count <- ggplot(data = agg_behav, aes(x = week, y = call.count, fill = treatment)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = call.count - call.count.se, ymax = call.count + call.count.se), width = 0.1) +
scale_fill_viridis_d(begin = 0.1, end = 0.9) +
facet_wrap(~treatment, ncol = 3, scale = "fixed") +
labs(y = "Vocal output", x = "Week") +
theme_classic(base_size = bs) +
theme(legend.position = "none")
gg_acoustic.diversity <- ggplot(data = agg_behav, aes(x = week, y = acoustic.diversity, fill = treatment)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = acoustic.diversity - acoustic.diversity.se, ymax = acoustic.diversity + acoustic.diversity.se), width = 0.1) +
scale_fill_viridis_d(begin = 0.1, end = 0.9) +
facet_wrap(~treatment, ncol = 3, scale = "fixed") +
labs(y = "Change in vocal diversity", x = "Week") +
theme_classic(base_size = bs) +
theme(legend.position = "none")
gg_acustic.plasticity <- ggplot(data = agg_behav, aes(x = week, y = acustic.plasticity, fill = treatment)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = acustic.plasticity - acustic.plasticity.se, ymax = acustic.plasticity + acustic.plasticity.se), width = 0.1) +
scale_fill_viridis_d(begin = 0.1, end = 0.9) +
facet_wrap(~treatment, ncol = 3, scale = "fixed") +
labs(y = "Vocal plasticity", x = "Week") +
theme_classic(base_size = bs) +
theme(legend.position = "none")
gg_acoustic.convergence <- ggplot(data = agg_behav, aes(x = week, y = acoustic.convergence, fill = treatment)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = acoustic.convergence - acoustic.convergence.se, ymax = acoustic.convergence + acoustic.convergence.se), width = 0.1) +
scale_fill_viridis_d(begin = 0.1, end = 0.9) +
facet_wrap(~treatment, ncol = 3, scale = "fixed") +
labs(y = "Vocal convergence", x = "Week") +
theme_classic(base_size = bs) +
theme(legend.position = "none")
cowplot::plot_grid(gg_call.count, gg_acoustic.diversity, gg_acustic.plasticity, gg_acoustic.convergence)
# cowplot::ggsave2(filename = "./output/vocal_parameters_tru_time_70dpi.jpeg")
#
# cowplot::ggsave2(filename = "./output/vocal_parameters_tru_time_300dpi.jpeg", dpi = 300)
responses <- c("call.count", "acoustic.diversity", "acustic.plasticity", "acoustic.convergence")
predictors <- c("~ treatment + week + (1|ID) + (1|round)")
formulas <- expand.grid(responses = responses, predictors = predictors, stringsAsFactors = FALSE)
vars_to_scale <- c(responses, "week")
for (i in vars_to_scale) agg_dat[, vars_to_scale] <- scale(agg_dat[, vars_to_scale])
behav_models <- lapply(1:nrow(formulas), function(x) {
sub_dat <- agg_dat[!is.na(agg_dat[names(agg_dat) == formulas$responses[x]]),]
# remove week 1
if (!grepl("count|group", formulas$responses[x]))
sub_dat <- sub_dat[sub_dat$week != 1, ]
mod <- brm(formula = paste(formulas$responses[x], formulas$predictors[x]),
iter = 50000, silent = 2, data = sub_dat, control = list(adapt_delta = 0.9, max_treedepth = 15),
chains = 4, prior = c(prior(normal(0, 5), "b"), prior(normal(0, 10), "Intercept"),
prior(student_t(3, 0, 10), "sd"), prior(student_t(3, 0, 10), "sigma"))
)
return(mod)
})
names(behav_models) <- paste(formulas$responses, formulas$predictors)
saveRDS(behav_models, "./data/processed/behavioral_response_models.RDS")
breath.count <- stack(metadat[, c("D3.Breath.Count", "D7.Breath.Count", "D14.Breath.Count",
"D21.Breath.Count", "D28.Breath.Count")])
weight <- stack(metadat[, c("D3.Bird.Weight..g.", "D7.Bird.Weight..g.", "D14.Bird.Weight..g.",
"D21.Bird.Weight..g.", "D28.Bird.Weight..g.")])
cort.stress <- stack(metadat[, c("D3.CORT.Stress", "D7.CORT.Stress", "D14.CORT.Stress",
"D21.CORT.Stress", "D28.CORT.Stress")])
cort.baseline <- stack(metadat[, c("D3.CORT.Baseline", "D7.CORT.Baseline", "D14.CORT.Baseline",
"D21.CORT.Baseline", "D28.CORT.Baseline")])
stress <- data.frame(metadat[, c("Bird.ID", "Treatment", "Round", "Treatment.Room")],
week = breath.count$ind, breath.count = breath.count$values, weight = weight$values,
cort.stress = cort.stress$values, cort.baseline = cort.baseline$values, stress.response = cort.stress$values -
cort.baseline$values)
# head(stress)
stress$week <- factor(sapply(strsplit(as.character(stress$week), "\\."), "[[", 1),
levels = c("D3", "D7", "D14", "D21", "D28"))
stress$day <- as.numeric(gsub("D", "", as.character(stress$week)))
stress$round <- paste("Round", stress$Round)
stress$treatment <- factor(stress$Treatment, levels = c("Control", "Medium Stress",
"High Stress"))
# remove 5th week
stress <- stress[stress$week != "D28", ]
stress_l <- lapply(stress$Bird.ID, function(x) {
X <- stress[stress$Bird.ID == x, ]
X$breath.count <- X$breath.count - X$breath.count[X$week == "D3"]
X$weight <- X$weight - X$weight[X$week == "D3"]
X$cort.stress <- X$cort.stress - X$cort.stress[X$week == "D3"]
X$cort.baseline <- X$cort.baseline - X$cort.baseline[X$week == "D3"]
X$stress.response <- X$stress.response #- X$stress.response[X$week == "D3"]
return(X)
})
stress <- do.call(rbind, stress_l)
agg_stress <- aggregate(cbind(breath.count, weight, stress.response, cort.baseline) ~ week + treatment, stress, mean)
agg_stress_se <- aggregate(cbind(breath.count, weight, stress.response, cort.baseline) ~ week + treatment, stress, standard_error)
names(agg_stress_se) <- paste(names(agg_stress_se), ".se", sep = "")
agg_stress <- cbind(agg_stress, agg_stress_se[ , 3:6])
agg_stress$Week <- 1:4
bs <- 22
gg_breath.count <- ggplot(data = agg_stress, aes(x = Week, y = breath.count, fill = treatment)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = breath.count - breath.count.se, ymax = breath.count + breath.count.se), width = 0.1) +
scale_fill_viridis_d(begin = 0.1, end = 0.9) +
facet_wrap(~treatment, ncol = 3, scale = "fixed") +
labs(y = "Mean change in breath\nrate (breaths/min)", x = "Week") +
theme_classic(base_size = bs) +
theme(legend.position = "none")
gg_weight <- ggplot(data = agg_stress, aes(x = Week, y = weight, fill = treatment)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = weight - weight.se, ymax = weight + weight.se), width = 0.1) +
scale_fill_viridis_d(begin = 0.1, end = 0.9) +
facet_wrap(~treatment, ncol = 3, scale = "fixed") +
labs(y = "Mean change in \nweight (grams)", x = "Week") +
theme_classic(base_size = bs) +
theme(legend.position = "none")
gg_cort.baseline <- ggplot(data = agg_stress, aes(x = Week, y = cort.baseline, fill = treatment)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = cort.baseline - cort.baseline.se, ymax = cort.baseline + cort.baseline.se), width = 0.1) +
scale_fill_viridis_d(begin = 0.1, end = 0.9) +
facet_wrap(~treatment, ncol = 3, scale = "fixed") +
labs(y = "Mean change in\nbaseline CORT (ng/mL)", x = "Week") +
theme_classic(base_size = bs) +
theme(legend.position = "none")
gg_stress.response <- ggplot(data = agg_stress, aes(x = Week, y = stress.response, fill = treatment)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = stress.response - stress.response.se, ymax = stress.response + stress.response.se), width = 0.1) +
scale_fill_viridis_d(begin = 0.1, end = 0.9) +
facet_wrap(~treatment, ncol = 3, scale = "fixed") +
labs(y = "Mean change in stress response \nCORT (ng/mL)", x = "Week") +
theme_classic(base_size = bs) +
theme(legend.position = "none")
gg_coeffs_physio <- lapply(physio_models, function(x){
vars <- grep("b_", posterior::variables(x), value = TRUE)
draws <- posterior::as_draws_array(x, variable = vars)
coef_table <- draw_summary(draws, variables = vars, probs = c(0.025, 0.975), robust = TRUE)
coef_table$predictor <- rownames(coef_table)
coef_table$predictor <- gsub("b_treatment|b_", "", coef_table$predictor)
coef_table$predictor <- gsub("Stress", " stress", coef_table$predictor)
coef_table$predictor <- gsub("week", "Week", coef_table$predictor)
coef_table <- coef_table[coef_table$predictor != "Intercept", ]
gg_coef <- ggplot2::ggplot(data = coef_table, aes(x = Estimate, y = predictor)) +
geom_vline(xintercept = 0, lty = 2) +
ggplot2::geom_point(size = 4, col = col_pointrange) +
ggplot2::geom_errorbar(ggplot2::aes(xmin = `l-95% CI`, xmax = `u-95% CI`),
width = 0, col = col_pointrange) +
ggplot2::theme_classic(base_size = bs) +
ggplot2::theme(
axis.ticks.length = ggplot2::unit(0, "pt"),
plot.margin = ggplot2::margin(0, 0, 0, 0, "pt"),
legend.position = "none",
strip.background = ggplot2::element_blank(),
strip.text = ggplot2::element_blank()
) +
ggplot2::labs(x = "Effect size", y = "")
return(gg_coef)
})
# cowplot::plot_grid(gg_breath.count + theme_classic(base_size = 10)  +
#     theme(legend.position = "none"), ggl[[grep("breath", names(ggl))]])
#
# cowplot::plot_grid(gg_weight + theme_classic(base_size = 10)  +
#     theme(legend.position = "none"), ggl[[grep("weight", names(ggl))]])
#
# cowplot::plot_grid(gg_cort.baseline + theme_classic(base_size = 10)  +
#     theme(legend.position = "none"), ggl[[grep("base", names(ggl))]])
#
# cowplot::plot_grid(gg_stress.response + theme_classic(base_size = 10)  +
#     theme(legend.position = "none"), ggl[[grep("response", names(ggl))]])
bs <- 20
cowplot::plot_grid(
gg_breath.count + theme_classic(base_size = bs) +
theme(legend.position = "none"),
gg_weight + theme_classic(base_size = bs) +
theme(legend.position = "none"),
gg_cort.baseline + theme_classic(base_size = bs) +
theme(legend.position = "none"),
gg_stress.response + theme_classic(base_size = bs) +
theme(legend.position = "none"),
gg_coeffs_physio[[grep("breath", names(gg_coeffs_physio))]] + theme_classic(base_size = bs),
gg_coeffs_physio[[grep("weight", names(gg_coeffs_physio))]] + theme_classic(base_size = bs),
gg_coeffs_physio[[grep("baseline", names(gg_coeffs_physio))]] + theme_classic(base_size = bs),
gg_coeffs_physio[[grep("response", names(gg_coeffs_physio))]] + theme_classic(base_size = bs), nrow = 2, rel_heights = c(1.8, 1))
# try bs = 20 for saving plots
cowplot::ggsave2(filename = "./output/bar_graphs_and_estimates_physiology_70dpi.jpeg", width = 25, height = 9)
cowplot::ggsave2(filename = "./output/bar_graphs_and_estimates_physiology_300dpi.jpeg", dpi = 300, width = 25, height = 9)
agg_call.count <- aggregate(cbind(call.count, acoustic.convergence) ~ week + treatment, agg_dat, mean)
agg_behav <- aggregate(cbind(acoustic.diversity, acustic.plasticity) ~ week + treatment, agg_dat, mean)
agg_call.count_se <- aggregate(cbind(call.count, acoustic.convergence) ~ week + treatment, agg_dat, standard_error)
agg_behav_se <- aggregate(cbind(acoustic.diversity, acustic.plasticity) ~ week + treatment, agg_dat, standard_error)
agg_behav_se <- merge(agg_call.count_se, agg_behav_se, all = TRUE)
names(agg_behav_se) <- paste(names(agg_behav_se), ".se", sep = "")
agg_behav <- merge(agg_call.count, agg_behav, all = TRUE)
agg_behav <- cbind(agg_behav, agg_behav_se[ , 3:6])
bs <- 22
agg_behav$treatment <- factor(agg_behav$treatment, levels = c("Control", "Medium Stress",
"High Stress"))
gg_call.count <- ggplot(data = agg_behav, aes(x = week, y = call.count, fill = treatment)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = call.count - call.count.se, ymax = call.count + call.count.se), width = 0.1) +
scale_fill_viridis_d(begin = 0.1, end = 0.9) +
facet_wrap(~treatment, ncol = 3, scale = "fixed") +
labs(y = "Vocal output", x = "Week") +
theme_classic(base_size = bs) +
theme(legend.position = "none")
gg_acoustic.diversity <- ggplot(data = agg_behav, aes(x = week, y = acoustic.diversity, fill = treatment)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = acoustic.diversity - acoustic.diversity.se, ymax = acoustic.diversity + acoustic.diversity.se), width = 0.1) +
scale_fill_viridis_d(begin = 0.1, end = 0.9) +
facet_wrap(~treatment, ncol = 3, scale = "fixed") +
labs(y = "Change in vocal diversity", x = "Week") +
theme_classic(base_size = bs) +
theme(legend.position = "none")
gg_acustic.plasticity <- ggplot(data = agg_behav, aes(x = week, y = acustic.plasticity, fill = treatment)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = acustic.plasticity - acustic.plasticity.se, ymax = acustic.plasticity + acustic.plasticity.se), width = 0.1) +
scale_fill_viridis_d(begin = 0.1, end = 0.9) +
facet_wrap(~treatment, ncol = 3, scale = "fixed") +
labs(y = "Vocal plasticity", x = "Week") +
theme_classic(base_size = bs) +
theme(legend.position = "none")
gg_acoustic.convergence <- ggplot(data = agg_behav, aes(x = week, y = acoustic.convergence, fill = treatment)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = acoustic.convergence - acoustic.convergence.se, ymax = acoustic.convergence + acoustic.convergence.se), width = 0.1) +
scale_fill_viridis_d(begin = 0.1, end = 0.9) +
facet_wrap(~treatment, ncol = 3, scale = "fixed") +
labs(y = "Vocal convergence", x = "Week") +
theme_classic(base_size = bs) +
theme(legend.position = "none")
cowplot::plot_grid(gg_call.count, gg_acoustic.diversity, gg_acustic.plasticity, gg_acoustic.convergence)
gg_coeffs_behav <- lapply(behav_models, function(x){
vars <- grep("b_", posterior::variables(x), value = TRUE)
draws <- posterior::as_draws_array(x, variable = vars)
coef_table <- draw_summary(draws, variables = vars, probs = c(0.025, 0.975), robust = TRUE)
coef_table$predictor <- rownames(coef_table)
coef_table$predictor <- gsub("b_treatment|b_", "", coef_table$predictor)
coef_table$predictor <- gsub("Stress", " stress", coef_table$predictor)
coef_table$predictor <- gsub("week", "Week", coef_table$predictor)
coef_table <- coef_table[coef_table$predictor != "Intercept", ]
gg_coef <- ggplot2::ggplot(data = coef_table, aes(x = Estimate, y = predictor)) +
geom_vline(xintercept = 0, lty = 2) +
ggplot2::geom_point(size = 4, col = col_pointrange) +
ggplot2::geom_errorbar(ggplot2::aes(xmin = `l-95% CI`, xmax = `u-95% CI`),
width = 0, col = col_pointrange) +
ggplot2::theme_classic(base_size = bs) +
ggplot2::theme(
axis.ticks.length = ggplot2::unit(0, "pt"),
plot.margin = ggplot2::margin(0, 0, 0, 0, "pt"),
legend.position = "none",
strip.background = ggplot2::element_blank(),
strip.text = ggplot2::element_blank()
) +
ggplot2::labs(x = "Effect size", y = "")
return(gg_coef)
})
bs <- 20
cowplot::plot_grid(
gg_call.count + theme_classic(base_size = bs) +
theme(legend.position = "none"),
gg_acoustic.diversity + theme_classic(base_size = bs) +
theme(legend.position = "none"),
gg_acustic.plasticity + theme_classic(base_size = bs) +
theme(legend.position = "none"),
gg_acoustic.convergence + theme_classic(base_size = bs) +
theme(legend.position = "none"),
gg_coeffs_behav[[grep("count", names(gg_coeffs_behav))]] + theme_classic(base_size = bs),
gg_coeffs_behav[[grep("diversity", names(gg_coeffs_behav))]] + theme_classic(base_size = bs),
gg_coeffs_behav[[grep("plasticity", names(gg_coeffs_behav))]] + theme_classic(base_size = bs),
gg_coeffs_behav[[grep("convergence", names(gg_coeffs_behav))]] + theme_classic(base_size = bs), nrow = 2, rel_heights = c(1.8, 1))
# try bs = 20 for saving plots
cowplot::ggsave2(filename = "./output/bar_graphs_and_estimates_behavior_70dpi.jpeg", width = 25, height = 9)
#
cowplot::ggsave2(filename = "./output/bar_graphs_and_estimates_behavior_300dpi.jpeg", dpi = 300, width = 25, height = 9)
